"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[524],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const i="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>I});var a=n(7462),r=n(7294),i=n(6010),l=n(2466),o=n(6550),s=n(1980),u=n(7392),c=n(12);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=p(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,u]=g({queryString:n,groupId:a}),[d,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),f=(()=>{const e=s??d;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),b(e)}),[u,b,i]),tabValues:i}}var f=n(2389);const h="tabList__CuJ",v="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==o&&(d(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},l,{className:(0,i.Z)("tabs__item",v,l?.className,{"tabs__item--active":o===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=b(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",h)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function I(e){const t=(0,f.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},8846:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);const r="codeDescContainer_ie8f",i="desc_jyqI",l="example_eYlF";function o(e){let{children:t}=e,n=a.Children.toArray(t).filter((e=>e));return a.createElement("div",{className:r},a.createElement("div",{className:i},n[0]),a.createElement("div",{className:l},n[1]))}},9395:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>g,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),i=n(8846),l=n(4866),o=n(5162);const s={},u="Utilities",c={unversionedId:"diagnostics/utilities",id:"diagnostics/utilities",title:"Utilities",description:"Is registered?",source:"@site/docs/diagnostics/utilities.md",sourceDirName:"diagnostics",slug:"/diagnostics/utilities",permalink:"/stashbox/docs/diagnostics/utilities",draft:!1,editUrl:"https://github.com/z4kn4fein/stashbox/edit/master/docs/docs/diagnostics/utilities.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1685963733,formattedLastUpdatedAt:"Jun 5, 2023",frontMatter:{},sidebar:"docs",previous:{title:"Validation",permalink:"/stashbox/docs/diagnostics/validation"}},d={},p=[{value:"Is registered?",id:"is-registered",level:2},{value:"<strong>Named</strong>",id:"named",level:4},{value:"Can resolve?",id:"can-resolve",level:2},{value:"Get all mappings",id:"get-all-mappings",level:2},{value:"Registration diagnostics",id:"registration-diagnostics",level:2}],m={toc:p};function g(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"utilities"},"Utilities"),(0,r.kt)("h2",{id:"is-registered"},"Is registered?"),(0,r.kt)(i.Z,{mdxType:"CodeDescPanel"},(0,r.kt)("div",null,(0,r.kt)("p",null,"With the ",(0,r.kt)("inlineCode",{parentName:"p"},"IsRegistered()")," function, you can find out whether a service is registered into the container or not."),(0,r.kt)("p",null,"It returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," only when the container has a registration with the given type (and name). It only checks the actual container's registrations. For every cases, you should use the ",(0,r.kt)("inlineCode",{parentName:"p"},"CanResolve()")," method.")),(0,r.kt)("div",null,(0,r.kt)(l.Z,{groupId:"generic-runtime-apis",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Generic API",label:"Generic API",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool isIJobRegistered = container.IsRegistered<IJob>();\n"))),(0,r.kt)(o.Z,{value:"Runtime type API",label:"Runtime type API",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool isIJobRegistered = container.IsRegistered(typeof(IJob));\n"))),(0,r.kt)(o.Z,{value:"Named",label:"Named",mdxType:"TabItem"},(0,r.kt)("h4",{id:"named"},(0,r.kt)("strong",{parentName:"h4"},"Named")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'bool isIJobRegistered = container.IsRegistered<IJob>("DbBackup");\n')))))),(0,r.kt)("h2",{id:"can-resolve"},"Can resolve?"),(0,r.kt)(i.Z,{mdxType:"CodeDescPanel"},(0,r.kt)("div",null,(0,r.kt)("p",null,"There might be cases when you are more interested in whether a service is resolvable from the container's actual state rather than finding out whether it's registered."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CanResolve()")," returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," only when at least one of the following is true:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The requested type is registered in the current or one of the parent containers."),(0,r.kt)("li",{parentName:"ul"},"The requested type is a closed generic type, and its open generic definition is registered."),(0,r.kt)("li",{parentName:"ul"},"The requested type is a wrapper (",(0,r.kt)("inlineCode",{parentName:"li"},"IEnumerable<>"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Lazy<>"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Func<>"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"KeyValuePair<,>"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ReadOnlyKeyValue<,>"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Metadata<,>"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ValueTuple<,>"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"Tuple<,>"),"), and the underlying type is registered."),(0,r.kt)("li",{parentName:"ul"},"The requested type is not registered, but it's resolvable, and ",(0,r.kt)("a",{parentName:"li",href:"/docs/configuration/container-configuration#unknown-type-resolution"},"unknown type resolution")," is enabled."))),(0,r.kt)("div",null,(0,r.kt)(l.Z,{groupId:"generic-runtime-apis",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Generic API",label:"Generic API",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool isIJobResolvable = container.CanResolve<IJob>();\n"))),(0,r.kt)(o.Z,{value:"Runtime type API",label:"Runtime type API",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"bool isIJobResolvable = container.CanResolve(typeof(IJob));\n"))),(0,r.kt)(o.Z,{value:"Named",label:"Named",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'bool isIJobResolvable = container.CanResolve<IJob>("DbBackup");\n')))))),(0,r.kt)("h2",{id:"get-all-mappings"},"Get all mappings"),(0,r.kt)(i.Z,{mdxType:"CodeDescPanel"},(0,r.kt)("div",null,(0,r.kt)("p",null,"You can get all registrations in a key-value pair collection (where the key is the ",(0,r.kt)("a",{parentName:"p",href:"/docs/getting-started/glossary#service-type--implementation-type"},"service type")," and the value is the actual registration) by calling the ",(0,r.kt)("inlineCode",{parentName:"p"},".GetRegistrationMappings()")," method.")),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"IEnumerable<KeyValuePair<Type, ServiceRegistration>> mappings = \n    container.GetRegistrationMappings();\n")))),(0,r.kt)("h2",{id:"registration-diagnostics"},"Registration diagnostics"),(0,r.kt)(i.Z,{mdxType:"CodeDescPanel"},(0,r.kt)("div",null,(0,r.kt)("p",null,"You can get a much more readable version of the registration mappings by calling the ",(0,r.kt)("inlineCode",{parentName:"p"},".GetRegistrationDiagnostics()")," method."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RegistrationDiagnosticsInfo")," has an overridden ",(0,r.kt)("inlineCode",{parentName:"p"},".ToString()")," method that returns the mapping details formatted in a human-readable form.")),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'container.Register<IJob, DbBackup>("DbBackupJob");\ncontainer.Register(typeof(IEventHandler<>), typeof(EventHandler<>));\n\nIEnumerable<RegistrationDiagnosticsInfo> diagnostics = \n    container.GetRegistrationDiagnostics();\n\ndiagnostics.ForEach(Console.WriteLine);\n// output:\n// IJob => DbBackup, name: DbBackupJob\n// IEventHandler<> => EventHandler<>, name: null\n')))))}g.isMDXComponent=!0}}]);